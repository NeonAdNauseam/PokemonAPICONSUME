---
import '../styles/background.css';
---

<svg id="halftone-bg" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet">
  <g id="dots"></g>
</svg>

<script type="module" is:inline>
const svg = document.getElementById('halftone-bg');
let dotGroup = document.getElementById('dots');

function drawDots() {
  const tempGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');

  const dotSize = 28;
  const cols = Math.floor(window.innerWidth / dotSize);
  const aspectRatio = window.innerHeight / window.innerWidth;
  const rows = Math.round(cols * aspectRatio);

  svg.setAttribute('viewBox', `0 0 ${cols} ${rows}`);

 
const minR = 0.05;
const maxR = 1.1;
  const dotColor = getComputedStyle(document.documentElement).getPropertyValue('--dot-color').trim();

const maxDist = Math.sqrt(cols * cols + rows * rows);

for (let row = -1; row <= rows; row++) {
  for (let col = -1; col <= cols; col++) {
const dx = (cols - col) / cols;
const dy = row / rows;
const dist = Math.sqrt(dx * dx + dy * dy);
const t = dist / Math.sqrt(2); // âˆš



    const easedT = 1 - Math.pow(1 - t, .5); // quadratic ease-out

const radius = minR + (maxR - minR) * easedT;


    const cx = col + 0.5;
    const cy = row + 0.5;

    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
    circle.setAttribute('cx', cx);
    circle.setAttribute('cy', cy);
    circle.setAttribute('r', radius);
    circle.setAttribute('fill', dotColor);

    tempGroup.appendChild(circle);
  }
}


  dotGroup.replaceWith(tempGroup);
  tempGroup.id = 'dots';
  dotGroup = tempGroup;
}

drawDots();

let resizeTimeout;
window.addEventListener('resize', () => {
  clearTimeout(resizeTimeout);
  resizeTimeout = setTimeout(drawDots, 200);
});


</script>
